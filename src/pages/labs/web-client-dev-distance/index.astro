---
import { getCollection } from "astro:content";

import BaseLayout from "../../../layouts/BaseLayout.astro";

const filterCourses = ["client-side-basics/", "distance/", "2024"];

let allCoursess = await getCollection("courses", ({ id }) =>
  filterCourses.map((crit) => id.includes(crit)).every((item) => item)
);

allCoursess.sort((a, b) => a.data.number - b.data.number);
---

<BaseLayout>
  <div class="prose lg:prose-lg mx-auto">
    <h1>Основы веб-разработки на стороне клиента (заочное)</h1>
    <p>
      Необходимо принять <a href="https://classroom.github.com/a/VPG2-g7v"
        >задание в classroom</a
      >.
    </p>
    <p>
      По результату выполнения работ в репозитории должна быть страница
      index.html. На ней в шапке H1 заголовком «ФИО - группа» и список из трех
      ссылок на страницы с выполнением других заданий, а именно "Валидация
      данных в форме", "Fetch" и "Signals, SSE".
    </p>
    <p>
      Остальные работы не влияют на итоговую оценку, но могут быть полезны вам для практики и подготовке к выполнению трех главных заданий.
    </p>
    <p>Требования к заданиям расписаны в самих заданиях.</p>
    <h2>Лабораторные работы</h2>
    <ol class="columns">
      {
        allCoursess
          .filter((post) => post.data.type === "labs")
          .sort((a, b) => a.data.number - b.data.number)
          .map((post) => (
            <li>
              <a href={`/web-course-site/labs/${post.id}`}>{post.data.title}</a>
            </li>
          ))
      }
    </ol>
  </div>
</BaseLayout>

<style>
  @media screen and (min-width: 500px) {
    .columns {
      columns: 2 1em;
    }
    .columns > li {
      margin-top: 0;
    }
  }
</style>
